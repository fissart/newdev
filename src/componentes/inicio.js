import * as THREE from 'three'
import React, { Suspense, useRef } from 'react'
import { Canvas, useFrame } from '@react-three/fiber'
import { Html, Environment, useGLTF, ContactShadows, OrbitControls } from '@react-three/drei'
import HeroPage from './HeroPage'
import Message from './message'
import logo from '../logo.png';
// import { App } from './www1.js'
// import logo from '../logo.svg'

// const pexel = (id) => `https://images.pexels.com/photos/${id}/pexels-photo-${id}.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260`
// const images = [
//   // Front
//   { position: [0, 0, 1.5], rotation: [0, 0, 0], url: './Photosphere1.jpg' },
//   // Back
//   { position: [-0.8, 0, -0.6], rotation: [0, 0, 0], url: './logo192.png' },
//   { position: [-1.5, 0, -1.6], rotation: [0, 0, 0], url: pexel(416430) },
//   { position: [0.8, 0, -0.6], rotation: [0, 0, 0], url: './ww_w.png' },
//   // Left
//   { position: [-1.75, 0, 0.25], rotation: [0, Math.PI / 2.5, 0], url: pexel(327482) },
//   { position: [-2.15, 0, 1.5], rotation: [0, Math.PI / 2.5, 0], url: pexel(325185) },
//   { position: [-2, 0, 2.75], rotation: [0, Math.PI / 2.5, 0], url: pexel(358574) },
//   // Right
//   { position: [1.75, 0, 0.25], rotation: [0, -Math.PI / 2.5, 0], url: pexel(227675) },
//   { position: [2.15, 0, 1.5], rotation: [0, -Math.PI / 2.5, 0], url: pexel(911738) },
//   { position: [2, 0, 2.75], rotation: [0, -Math.PI / 2.5, 0], url: pexel(1738986) }
// ]
// const Home = () => {
//   return (
//     <div style={{ height: '18cm', margin: 'auto' }}>

//       {pexel?<App images={images} />
//       :<header className="App-header">
//         <img src={logo} className="App-logo" alt="logo" />
//       </header>}

//     </div>
//   );
// };

// export default Home;


function Model(props) {
  const group = useRef()
  // Load model
  const { nodes, materials } = useGLTF('/mac-draco.glb')
  // Make it float
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)
    group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)
    group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1)
    group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1)
  })
  // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
  return (
    <group ref={group} {...props} dispose={null}>
      {/* <group rotation-x={-0.5} position={[0, -2.5, 0]}> */}
      <group rotation={[Math.PI / 2, 0, 0]}>
        {/* <mesh material={materials.aluminium} scale={2.5} geometry={nodes['Cube008'].geometry} /> */}
        {/* <mesh material={materials['matte.001']} scale={2.5} geometry={nodes['Cube008_1'].geometry} /> */}
        {/* <mesh geometry={nodes['Cube008_2'].geometry}> */}
        {/* Drei's HTML component can "hide behind" canvas geometry */}
        <Html className="content" rotation-x={-Math.PI / 1.5} transform>
          {/* <div className="wrapper" onPointerDown={(e) => e.stopPropagation()}> */}
          <HeroPage />
          {/* </div> */}
        </Html>
        {/* </mesh> */}
      </group>
      {/* </group> */}
      {/* <mesh material={materials.keys} geometry={nodes.keyboard.geometry} position={[1.79, 0, 3.45]} /> */}
      {/* <group position={[0, -0.1, 3.39]}>
        <mesh material={materials.aluminium} geometry={nodes['Cube002'].geometry} />
        <mesh material={materials.trackpad} geometry={nodes['Cube002_1'].geometry} />
      </group> */}
      {/* <mesh material={materials.touchbar} geometry={nodes.touchbar.geometry} position={[0, -0.03, 1.2]} /> */}
    </group>
  )
}
console.log(Model)

export default function Home() {
  return (
    <div className="contenedor">
      {Model.name == 'Model' ? <div className="iniciocontenedor">
        <Canvas camera={{ position: [19, 19, 19], fov: 35 }}>
          {/* <pointLight position={[10, 10, 10]} intensity={1.5} /> */}
          <Suspense fallback={null}>
            <group position={[-5, 1.5, 0]}>
              <Model />
            </group>
            <Environment preset="city" />
          </Suspense>
          {/* <ContactShadows position={[0, -4.5, 0]} scale={20} blur={2} far={4.5} /> */}
          <OrbitControls enablePan={false} enableZoom={false} minPolarAngle={Math.PI / 2.2} maxPolarAngle={Math.PI / 2.2} />
        </Canvas>
      </div>
        :
        <header className="App-header">
          <img src={logo} className="App-logo" alt="logo" />
        </header>}
      <Message />
    </div>
  )
}
